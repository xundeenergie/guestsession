#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule

case "$1" in

  configure)
      # enable an start the new services
      echo "A"
      deb-systemd-invoke enable guest-session@Gast.service
      echo "B"
      deb-systemd-invoke start guest-session@Gast.service
      echo "B"
      #/bin/systemctl enable --now guest-session@Gast.service
      ;;

  abort-upgrade|abort-remove|abort-deconfigure)
      exit 0
      ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;

esac

#echo "Noch was"
# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#
      echo "C"
deb-systemd-helper unmask guest-session@Gast.service >/dev/null || true
      echo "D"

# was-enabled defaults to true, so new installations run enable.
      echo "E"
if deb-systemd-helper --quiet was-enabled guest-session@Gast.service; then
      echo "F"
        # Enables the unit on first installation, creates new
        # symlinks on upgrades if the unit file has changed.
        deb-systemd-helper enable guest-session@Gast.service >/dev/null || true
    echo "F1"
else
      echo "G"
        # Update the statefile to add new symlinks (if any), which need to be
        # cleaned up on purge. Also remove old symlinks.
        deb-systemd-helper update-state guest-session@Gast.service >/dev/null || true
fi


      echo "H"

db_stop

exit 0
